{"version":3,"sources":["components/app_grid/content/Messages/Chat/Chat.module.css","components/app_grid/content/profile/Profile.module.css","components/app_grid/content/Messages/Dialogs/Dialogs.module.css","components/app_grid/menu/Menu.module.css","components/app_grid/header/Header.module.css","components/app_grid/content/Content.module.css","components/app_grid/content/Messages/Messages.module.css","components/app_grid/content/info/Info.module.css","components/app_grid/header/logo.png","components/app_grid/content/profile/lol.jpg","serviceWorker.js","components/app_grid/header/Header.jsx","components/app_grid/menu/Menu.jsx","components/app_grid/content/profile/Profile.jsx","components/app_grid/content/Messages/Dialogs/Dialogs.jsx","store.js","components/app_grid/content/Messages/Chat/Chat.jsx","components/app_grid/content/Messages/Messages.jsx","components/app_grid/content/info/Info.jsx","components/app_grid/content/ContentWrapper.jsx","components/app_grid/AppGrid.jsx","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Header","className","styles","header","logo","src","require","alt","news","Item","props","itemText","to","linkTo","activeClassName","activeTab","item","name","Menu","menu","menuWrapper","Profile","profileGrid","profilePic","profileInfo","Name","state","surname","croaks","Bio","bio","Button","DialogItem","Link","id","activeChat","dialogItem","profilePicture","img","Dialogs","dialogElements","dialogs","map","dialog","dialogsWrapper","store","_state","messagesPage","newMessageText","messages","messageText","mine","profilePage","userInfo","profilePictureURL","_callSubscriber","getState","this","subscribe","observer","dispatch","action","type","chatID","length","slice","push","text","ChatHeader","wrapper","pPicture","currentChat","MessageBubble","messageSpace","sent","received","bubble","Chat","slug","useParams","messagesItems","msg","chatWrapper","Body","Input","placeholder","onChange","event","target","value","updateNewMessageTextCreator","onClick","Messages","messagesGrid","path","render","Info","infoWrapper","ContentWrapper","contentWrapper","AppGrid","App","rerenderUI","ReactDOM","StrictMode","bind","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.84f2dcd6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatWrapper\":\"Chat_chatWrapper__3sR7g\",\"Header\":\"Chat_Header__MS9Yw\",\"Body\":\"Chat_Body__1jaNy\",\"Input\":\"Chat_Input__18lm4\",\"wrapper\":\"Chat_wrapper__1C6ET\",\"pPicture\":\"Chat_pPicture__1Cdnz\",\"Name\":\"Chat_Name__3g71K\",\"messageSpace\":\"Chat_messageSpace__-Rgzd\",\"bubble\":\"Chat_bubble__2W47T\",\"sent\":\"Chat_sent__XPMJ2\",\"received\":\"Chat_received__3bE2E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileGrid\":\"Profile_profileGrid__1x7k1\",\"profilePic\":\"Profile_profilePic__eIVTb\",\"profileInfo\":\"Profile_profileInfo__RXenA\",\"menu\":\"Profile_menu__2zXne\",\"Name\":\"Profile_Name__Rdmk3\",\"Bio\":\"Profile_Bio__142v8\",\"Button\":\"Profile_Button__3CwY3\",\"croakWrapper\":\"Profile_croakWrapper__E0bgd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsWrapper\":\"Dialogs_dialogsWrapper__3wive\",\"activeChat\":\"Dialogs_activeChat__3Aqy2\",\"dialogItem\":\"Dialogs_dialogItem__PgOBz\",\"Link\":\"Dialogs_Link__3iFHm\",\"profilePicture\":\"Dialogs_profilePicture__OMjyZ\",\"name\":\"Dialogs_name__2oSGY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__2bXZL\",\"menuWrapper\":\"Menu_menuWrapper__21ldz\",\"item\":\"Menu_item__3k2Jh\",\"activeTab\":\"Menu_activeTab__nX8ts\",\"itemText\":\"Menu_itemText__1jy7r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__13rWd\",\"logo\":\"Header_logo__3Ugzt\",\"news\":\"Header_news__3y6zH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentWrapper\":\"Content_contentWrapper__xhfcA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesGrid\":\"Messages_messagesGrid__1-be4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoWrapper\":\"Info_infoWrapper__2Oz6L\"};","module.exports = __webpack_public_path__ + \"static/media/logo.64ca5c54.png\";","module.exports = __webpack_public_path__ + \"static/media/lol.690950e2.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport styles from \"./Header.module.css\"\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={styles.header}>\r\n            <img className={styles.logo} src={require(\"../header/logo.png\")} alt='logo'/>\r\n            <span className={styles.news}>Messages are fake-sendable now!</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport styles from './Menu.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Item = (props) => {\r\n    return (\r\n        <NavLink className={styles.itemText} to={props.linkTo} activeClassName={styles.activeTab}>\r\n            <div className={styles.item}>{props.name}</div>\r\n        </NavLink>\r\n    )\r\n}\r\nconst Menu = () => {\r\n    return (\r\n        <div className={styles.menu}>\r\n            <div className={styles.menuWrapper}>\r\n                <Item name=\"🐸 Профиль\" linkTo=\"/profile\"/>\r\n                <Item name=\"💬 Диалоги\" linkTo=\"/messages\"/>\r\n                <Item name=\"🤓 Инфо\" linkTo=\"/info\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu","import React from 'react'\r\nimport styles from './Profile.module.css'\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={styles.profileGrid}>\r\n            <div className={styles.profilePic}><img src={require(\"./lol.jpg\")} alt='Profile'/></div>\r\n            <div className={styles.profileInfo}>\r\n                <div className={styles.Name}><b>{props.state.name} {props.state.surname}</b><span> | {props.state.croaks} Кваков</span></div>\r\n                <div className={styles.Bio}>{props.state.bio}</div>\r\n            </div>\r\n\r\n            <div className={styles.menu}>\r\n                <div className={styles.Button}>Написать</div>\r\n                <div className={styles.Button}>Квакнуть</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport styles from './Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <NavLink className={styles.Link} to={`/messages/${props.id}`} activeClassName={styles.activeChat}>\r\n            <div className={styles.dialogItem}>\r\n                <div className={styles.profilePicture}>\r\n                    <img src={props.img} alt='Profile'/>\r\n                </div>\r\n                <div className={styles.name}>\r\n                    {props.name}\r\n                </div>\r\n            </div>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogElements = props.dialogs.map(\r\n        dialog => <DialogItem name={dialog.name} img={dialog.img} id={dialog.id}/>\r\n    )\r\n    return (<div className={styles.dialogsWrapper}>\r\n            {dialogElements}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","const SEND_MESSAGE = 'SEND-MESSAGE'\r\nconst UPDATE_MESSAGE_INPUT = 'UPDATE-NEW-MESSAGE-INPUT'\r\n\r\nexport let store = {\r\n    _state: {\r\n        messagesPage: {\r\n            dialogs: [\r\n                {\r\n                    id: 0,\r\n                    img: \"https://static.vibe.com/files/2017/05/Lil-Uzi-Vert-photo-1494953208-650x366.jpg\",\r\n                    name: \"Lil Uzi\",\r\n                    newMessageText: \"\"\r\n                },\r\n                {\r\n                    id: 1,\r\n                    img: \"https://bstars.ru/media/djcatalog2/images/item/17/playboi-carti.1_f.jpg\",\r\n                    name: \"Playboi Carti\",\r\n                    newMessageText: \"\"\r\n                },\r\n                {\r\n                    id: 2,\r\n                    img: \"https://avatars.mds.yandex.net/get-ynews/56393/c75e2863dcdd080c632437162daccc65/orig\",\r\n                    name: \"Lil Pump\",\r\n                    newMessageText: \"\"\r\n                },\r\n                {\r\n                    id: 3,\r\n                    img: \"https://cdn-st1.rtr-vesti.ru/vh/pictures/xw/167/259/3.jpg\",\r\n                    name: \"6ix 9ine\",\r\n                    newMessageText: \"\"\r\n                }\r\n\r\n            ],\r\n            messages: [\r\n                [\r\n                    {\r\n                        messageText: \"Glock switch, Glock switch (Brrt), Glock switch (Brrt), Glock switch (Brrt)\\n\" +\r\n                            \"I just ran from 12 in Audi R8, this ain't stock shit (Skrrt)\\n\" +\r\n                            \"I got so much blue, my pocket GS9, I'm on my hot shit (Yeah, woo)\\n\" +\r\n                            \"Cancel all my shows so I just started on some stock shit (Money)\",\r\n                        mine: false,\r\n                        id: 0\r\n                    }\r\n                ],\r\n                [\r\n                    {\r\n                        messageText: \"We started rappin', nigga\\n\" +\r\n                            \"These all black diamonds, nigga\\n\" +\r\n                            \"Hang out with robbers, nigga\\n\" +\r\n                            \"What you know about robbin' niggas?\",\r\n                        mine: false,\r\n                        id: 0\r\n                    }\r\n                ],\r\n                [\r\n                    {\r\n                        messageText: \"gucci gang gucci gang\",\r\n                        mine: false,\r\n                        id: 0\r\n                    }\r\n                ],\r\n                [\r\n                    {\r\n                        messageText: \"kekekekke\",\r\n                        mine: false,\r\n                        id: 0\r\n                    }\r\n                ]\r\n\r\n            ]\r\n        },\r\n        profilePage: {\r\n            userInfo: {\r\n                id: 22842069,\r\n                profilePictureURL: \"\",\r\n                name: \"Лол\",\r\n                surname: \"Лягушонок\",\r\n                croaks: 36,\r\n                bio: \"К сожалению умер.....(\"\r\n            }\r\n        }\r\n    },\r\n\r\n    _callSubscriber() {\r\n    },\r\n\r\n    getState() {\r\n        return this._state;\r\n    },\r\n    subscribe(observer) {\r\n        this._callSubscriber = observer;\r\n    },\r\n\r\n    dispatch(action) {\r\n        if (action.type === SEND_MESSAGE) {\r\n            if (this._state.messagesPage.dialogs[action.chatID].newMessageText === \"\") return\r\n            let id = this._state.messagesPage.messages[action.chatID].length !== 0 ? this._state.messagesPage.messages[action.chatID].slice(-1)[0].id + 1 : 0;\r\n            this._state.messagesPage.messages[action.chatID].push(\r\n                {\r\n                    messageText: this._state.messagesPage.dialogs[action.chatID].newMessageText,\r\n                    mine: true,\r\n                    id: id\r\n                }\r\n            )\r\n            this._state.messagesPage.dialogs[action.chatID].newMessageText = \"\"\r\n\r\n            this._callSubscriber(this._state)\r\n            return\r\n        }\r\n\r\n        if (action.type === UPDATE_MESSAGE_INPUT) {\r\n            let newMessageText = action.text\r\n            this._state.messagesPage.dialogs[action.chatID].newMessageText = newMessageText;\r\n            this._callSubscriber(this._state)\r\n            return\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\nexport const sendMessageActionCreator = (chatID) => (\r\n    {type: SEND_MESSAGE, chatID: chatID}\r\n)\r\nexport const updateNewMessageTextCreator = (text, id) => (\r\n    {type: UPDATE_MESSAGE_INPUT, text: text, chatID: id}\r\n)","import React from \"react\";\r\nimport styles from \"./Chat.module.css\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {sendMessageActionCreator, updateNewMessageTextCreator} from \"../../../../../store\";\r\n\r\nconst ChatHeader = (props) => {\r\n    return (<div className={styles.wrapper}>\r\n        <div className={styles.pPicture}><img src={props.currentChat.img} alt='Profile'/></div>\r\n        <div className={styles.Name}><b> {props.currentChat.name}</b></div>\r\n    </div>)\r\n}\r\n\r\nconst MessageBubble = (props) => {\r\n    return (\r\n        <div className={styles.messageSpace}>\r\n            <div className={`${props.mine ? styles.sent : styles.received}`}>\r\n                <div className={styles.bubble}> {props.messageText}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Chat = (props) => {\r\n    let {slug} = useParams();\r\n\r\n    let newMessageText = props.currentChat[slug].newMessageText;\r\n    let messagesItems = props.messages[slug].map(\r\n        msg => <MessageBubble messageText={msg.messageText} id={msg.id} mine={msg.mine}/>\r\n    )\r\n\r\n    let sendMsg = () => {\r\n        props.dispatch(sendMessageActionCreator(slug));\r\n    }\r\n\r\n    let onTextInputChange = (event) => {\r\n        let text = event.target.value;\r\n        props.dispatch(updateNewMessageTextCreator(text, slug));\r\n    }\r\n\r\n    return (\r\n        <div className={styles.chatWrapper}>\r\n            <div className={styles.Header}><ChatHeader currentChat={props.currentChat[slug]}/></div>\r\n            <div className={styles.Body}>{messagesItems}</div>\r\n            <div className={styles.Input}>\r\n                <textarea placeholder='Новое сообщение' onChange={ onTextInputChange } value={newMessageText}/>\r\n                <button onClick={sendMsg}>⇒</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Chat;","import React from 'react'\r\nimport styles from './Messages.module.css'\r\nimport Dialogs from \"./Dialogs/Dialogs\";\r\nimport Chat from \"./Chat/Chat\";\r\nimport {Route, useParams} from \"react-router-dom\"\r\n\r\nconst Messages = (props) => {\r\n    return (\r\n        <div className={styles.messagesGrid}>\r\n            <div><Dialogs dialogs={props.state.dialogs}/></div>\r\n\r\n            <Route path=\"/messages/:slug\" render={() =>\r\n                (\r\n                    <div><Chat currentChat={props.state.dialogs}\r\n                               messages={props.state.messages}\r\n                               dispatch={props.dispatch}\r\n                    /></div>\r\n                )\r\n            }/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Messages","import React from 'react'\r\nimport styles from './Info.module.css'\r\n\r\n\r\nconst Info = (props) => {\r\n    return (\r\n        <div className={styles.infoWrapper}>\r\n            <h3>Данный сайт не является каким-то коммерческим продуктом</h3>\r\n            <span>\r\n            И вообще он по приколу сделан и не надо плиз оставлять тут какие-то пернональные данные, использовать свои пароли и тд.\r\n            Я за ваши данные ответственности не несу.\r\n                </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Info","import React from 'react'\r\nimport styles from './Content.module.css'\r\nimport {Route} from \"react-router-dom\";\r\nimport Profile from \"./profile/Profile\";\r\nimport Messages from \"./Messages/Messages\";\r\nimport Info from \"./info/Info\";\r\n\r\nconst ContentWrapper = (props) => {\r\n    return (\r\n        <div className={styles.contentWrapper}>\r\n            <Route path='/profile' render={() => <Profile\r\n                state={props.state.profilePage.userInfo}/>}/>\r\n            <Route path='/messages' render={() => <Messages\r\n                state={props.state.messagesPage}\r\n                dispatch={props.dispatch}/>}/>\r\n            <Route path='/info' render={() => <Info/>}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContentWrapper","import React from 'react'\r\nimport Header from \"./header/Header\";\r\nimport \"./AppGrid.css\"\r\nimport Menu from \"./menu/Menu\";\r\nimport ContentWrapper from \"./content/ContentWrapper\";\r\n\r\n\r\nconst AppGrid = (props) => {\r\n    return (\r\n        <div className='app-grid'>\r\n            <Header/>\r\n            <Menu/>\r\n            <ContentWrapper state={props.state} dispatch={props.dispatch}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppGrid","import React from 'react';\nimport AppGrid from \"./components/app_grid/AppGrid\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nconst App = (props) => {\n    return (\n        <BrowserRouter>\n            <div className='app-wrapper'>\n                <AppGrid state={props.state} dispatch={props.dispatch}/>\n            </div>\n        </BrowserRouter>\n    )\n}\n\nexport default App;\n","import './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport {store} from \"./store\";\n\nlet rerenderUI = (state) => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App state={state} dispatch={store.dispatch.bind(store)}/>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\nrerenderUI(store.getState());\n\nstore.subscribe(rerenderUI);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}